XBotInterface:
  urdf: xacro $(rospack find inail2arm_urdf)/urdf/inail2_dual_arm.urdf.xacro end_effector:=none
  srdf: xacro $(rospack find inail2arm_srdf)/srdf/inail2_dual_arm.srdf.xacro end_effector:=none

ModelInterface:
  model_type: "RBDL"

# hal
xbotcore_device_configs:
    sim: $(rospack find inail2arm_config)/hal/inail2arm_gz.yaml
    dummy: $(rospack find inail2arm_config)/hal/inail2arm_dummy.yaml
    ec_pos: $(rospack find inail2arm_config)/hal/ec_all.yaml
    ec_imp: $(rospack find inail2arm_config)/hal/ec_all.yaml
    ec_idle: $(rospack find inail2arm_config)/hal/ec_all.yaml

# threads
xbotcore_threads:
    rt_main:  {sched: fifo , prio: 60, period: 0.001}
    udp_srv:  {sched: other , prio: 0, period: 0.0001}
    nrt_main: {sched: other, prio: 0 , period: 0.005}


# plugins
xbotcore_plugins:

    homing:
        thread: rt_main
        type: homing

    ros_io: {thread: nrt_main, type: ros_io, params: {publish_tf: true}}

    ros_control: {thread: nrt_main, type: ros_control}

    ik_plugin:
      type: tom_centauro_ik
      thread: rt_main 
      params: 
        problem_description: file://$(rospack find inail2arm_cartesio)/config/inail2_dual_arm_simple_stack.yaml

    udp_server:
      type: tom_centauro_udp_server
      thread: udp_srv

    ec_ros:
      type: ec_ros
      thread: nrt_main


# global parameters
xbotcore_param:
    /xbot/hal/joint_safety/filter_autostart: {value: true, type: bool}
    /xbot/hal/joint_safety/filter_cutoff_hz: {value: 2.0, type: double}
    /xbot/hal/enable_safety: {value: true, type: bool}
    /xbot_internal/ros_io/call_timeout: {value: 1.0, type: chrono}





